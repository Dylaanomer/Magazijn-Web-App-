@model LoginViewModel
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> signInManager


<head runat="server">
    <title></title>
    <link href="jquery-ui.css" rel="stylesheet" type="text/css" />
    <script src="jquery.min.js" type="text/javascript"></script>
    <script src="jquery-ui.min.js" type="text/javascript"></script>
    <link href="keyboard.css" rel="stylesheet" type="text/css" />
    <script src="jquery.keyboard.js" type="text/javascript"></script>
    <script src="jquery.keyboard.extension-typing.js" type="text/javascript"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $('#keyboard').keyboard({
                preventPaste: true,
                autoAccept: true
            })
            .addTyping();
        });
    </script>
</head>


    @{
        var schemes = await signInManager.GetExternalAuthenticationSchemesAsync();
        var loginProivders = schemes.ToList();
    }
    @if (loginProivders.Count() > 0)
    {
        <div class="col-md-4">
            <section>
                <h4>Log in via DGS email</h4>
                <form asp-controller="Account" asp-action="ExternalLogin" asp-route-returnUrl="@ViewData["ReturnUrl"]" method="post" role="form">
                    <div>
                        <p>
                            @foreach (var provider in loginProivders)
                            {
                                <button type="submit" class="btn btn-primary" name="provider" value="@provider.Name"
                                        title="Log in using your @provider.Name account">
                                    @provider.Name
                                    </button>
                                }
                        </p>
                    </div>
                </form>
            </section>
        </div>
    }
</div>



@section Scripts{
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}